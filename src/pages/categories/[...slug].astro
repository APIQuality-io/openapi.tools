---
import { getCollection } from 'astro:content';

import Card from '@/components/Card.astro';
import PageHeader from '@/components/PageHeader.astro';
import Container from '../../components/Container';
import Layout from '../../layouts/Layout.astro';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const categories = await getCollection('categories');
  return categories.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

// 3 get entries for this category from the Tools collection
const allTools = await getCollection('tools');

const tools = allTools.filter((tool) => {
  if (!tool.data.categories) {
    return false;
  }
  const categories = tool.data.categories;
  // look through the categories list to see if any of the categories matches enry.slug
  return categories.some((category) => category.slug === entry.slug);
});

const toolCount = tools.length;
---

<Layout title={entry.data.name}>
  <PageHeader title={entry.data.name} description={entry.data.description}>
    {/* render the body of the markdown file for this category */}
    <Content />
  </PageHeader>

  <hr class="my-6" />

  <main>
    <ul>
      {
        tools.map((tool) => (
          <>
            <Card title={tool.data.name} body={tool.data.description} />
          </>
        ))
      }
    </ul>
  </main>
</Layout>
